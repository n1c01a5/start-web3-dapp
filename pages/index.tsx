import { useState, useEffect } from "react";

import type { NextPage } from "next";
import Head from "next/head";

import { ethers } from "ethers";
import { ConnectButton } from "@rainbow-me/rainbowkit";

import Hexacoin from "../contract/abi/hexacoin.json";

import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [provider, setProvider] = useState<any>(null);
  const [signer, setSigner] = useState<any>(null);
  const [hexacoin, setHexacoin] = useState<any>(null);
  const [balance, setBalance] = useState<string>("0");
  const [account, setAccount] = useState<string | null>(null);

  const hexacoinAddress = "0x5bc313c84cad54fabaf2f412579c9c2c0eb37d75";

  useEffect(() => {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      setProvider(provider);
      const signer = provider.getSigner();
      setSigner(signer);
    } else {
      console.log("Please install MetaMask!");
    }
  }, []);

  useEffect(() => {
    if (signer) {
      signer.getAddress().then((address: string) => setAccount(address));
    }
  }, [signer]);

  useEffect(() => {
    if (provider && account) {
      const contract = new ethers.Contract(hexacoinAddress, Hexacoin, provider);
      setHexacoin(contract);

      contract.balanceOf(account).then((balance: ethers.BigNumber) => {
        setBalance(ethers.utils.formatEther(balance));
      });
    }
  }, [provider, account]);

  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();

    // R√©cup√©rez les champs de saisie √† partir de l'objet form
    const form = event.target as HTMLFormElement;
    const toAddress = form.elements.namedItem("to") as HTMLInputElement;
    const amountToSend = form.elements.namedItem("amount") as HTMLInputElement;

    if (hexacoin && signer) {
      const hexacoinWithSigner = hexacoin.connect(signer);
      const amount = ethers.utils.parseEther(amountToSend.value);
      try {
        const tx = await hexacoinWithSigner.transfer(toAddress.value, amount);
        await tx.wait();
        alert("Transfer successful!");
      } catch (error) {
        console.error(error);
        alert("Transfer failed!");
      }
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <h1 className={styles.title}>
          Welcome to <a href="">RainbowKit</a> + <a href="">wagmi</a> +{" "}
          <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p>Balance Hexacoin: {balance}</p>

        <form onSubmit={onSubmit}>
          <label>
            To:
            <input name="to" />
          </label>
          <label>
            Amount:
            <input name="amount" />
          </label>
          <button type="submit">Transfer</button>
        </form>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a className={styles.card} href="https://rainbowkit.com">
            <h2>RainbowKit Documentation &rarr;</h2>
            <p>Learn how to customize your wallet connection flow.</p>
          </a>

          <a className={styles.card} href="https://wagmi.sh">
            <h2>wagmi Documentation &rarr;</h2>
            <p>Learn how to interact with Ethereum.</p>
          </a>

          <a
            className={styles.card}
            href="https://github.com/rainbow-me/rainbowkit/tree/main/examples"
          >
            <h2>RainbowKit Examples &rarr;</h2>
            <p>Discover boilerplate example RainbowKit projects.</p>
          </a>

          <a className={styles.card} href="https://nextjs.org/docs">
            <h2>Next.js Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a
            className={styles.card}
            href="https://github.com/vercel/next.js/tree/canary/examples"
          >
            <h2>Next.js Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            className={styles.card}
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
  );
};

export default Home;
